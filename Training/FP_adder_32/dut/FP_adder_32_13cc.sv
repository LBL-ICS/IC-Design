// Generated by CIRCT firtool-1.56.1
module full_subtractor_bw8(
  input  [7:0] io_in_a,
               io_in_b,
  output [7:0] io_out_s,
  output       io_out_c
);

  wire [8:0] result = {1'h0, io_in_a} - {1'h0, io_in_b};
  assign io_out_s = result[7:0];
  assign io_out_c = result[8];
endmodule

module full_adder_bw24(
  input  [23:0] io_in_a,
                io_in_b,
  output [23:0] io_out_s,
  output        io_out_c
);

  wire [24:0] result = {1'h0, io_in_a} + {1'h0, io_in_b};
  assign io_out_s = result[23:0];
  assign io_out_c = result[24];
endmodule

module FP_adder_32_13cc(
  input         clock,
                reset,
                in_valid,
  input  [31:0] in_data_0,
                in_data_1,
  output [31:0] out_data,
  output        out_ready
);

  wire [7:0]  _exp_subber2_io_out_s;
  wire        _exp_subber2_io_out_c;
  wire [23:0] _wfrac_adder_io_out_s;
  wire        _wfrac_adder_io_out_c;
  wire [7:0]  _exp_subber_io_out_s;
  wire        _exp_subber_io_out_c;
  reg         out_ready_reg_r;
  reg         out_ready_reg_r_1;
  reg         out_ready_reg_r_2;
  reg         out_ready_reg_r_3;
  reg         out_ready_reg_r_4;
  reg         out_ready_reg_r_5;
  reg         out_ready_reg_r_6;
  reg         out_ready_reg_r_7;
  reg         out_ready_reg_r_8;
  reg         out_ready_reg_r_9;
  reg         out_ready_reg_r_10;
  reg         out_ready_reg_r_11;
  reg         out_ready_reg;
  reg         sign_reg_0_0;
  reg         sign_reg_0_1;
  reg         sign_reg_1_0;
  reg         sign_reg_1_1;
  reg         sign_reg_2_0;
  reg         sign_reg_2_1;
  reg         sign_reg_3_0;
  reg         sign_reg_3_1;
  reg         sign_reg_4_0;
  reg         sign_reg_4_1;
  reg         sign_reg_5_0;
  reg         sign_reg_5_1;
  reg         sign_reg_6_0;
  reg         sign_reg_6_1;
  reg         sign_reg_7_0;
  reg         sign_reg_7_1;
  reg         sign_reg_8_0;
  reg         sign_reg_8_1;
  reg         sign_reg_9_0;
  reg         sign_reg_9_1;
  reg         sign_reg_10_0;
  reg         sign_reg_10_1;
  reg  [7:0]  exp_reg_0_0;
  reg  [7:0]  exp_reg_0_1;
  reg  [7:0]  exp_reg_1_0;
  reg  [7:0]  exp_reg_1_1;
  reg  [7:0]  exp_reg_2_0;
  reg  [7:0]  exp_reg_2_1;
  reg  [22:0] frac_reg_0_0;
  reg  [22:0] frac_reg_0_1;
  reg  [22:0] frac_reg_1_0;
  reg  [22:0] frac_reg_1_1;
  reg  [22:0] frac_reg_2_0;
  reg  [22:0] frac_reg_2_1;
  reg  [23:0] wfrac_reg_0_0;
  reg  [23:0] wfrac_reg_0_1;
  reg  [23:0] wfrac_reg_1_0;
  reg  [23:0] wfrac_reg_1_1;
  reg  [23:0] wfrac_reg_2_0;
  reg  [23:0] wfrac_reg_2_1;
  reg  [7:0]  exp_subber_out_s_reg_0;
  reg  [7:0]  exp_subber_out_s_reg_1;
  reg         exp_subber_out_c_reg_0;
  reg         exp_subber_out_c_reg_1;
  reg  [23:0] temp_wfrac_add_in_reg_0_0;
  reg  [23:0] temp_wfrac_add_in_reg_0_1;
  reg  [23:0] temp_wfrac_add_in_reg_1_0;
  reg  [23:0] temp_wfrac_add_in_reg_1_1;
  reg         ref_sign_reg_0;
  reg         ref_sign_reg_1;
  reg         ref_sign_reg_2;
  reg         ref_sign_reg_3;
  reg         ref_sign_reg_4;
  reg         ref_sign_reg_5;
  reg         ref_sign_reg_6;
  reg         ref_sign_reg_7;
  reg  [22:0] ref_frac_reg_0;
  reg  [22:0] ref_frac_reg_1;
  reg  [22:0] ref_frac_reg_2;
  reg  [22:0] ref_frac_reg_3;
  reg  [22:0] ref_frac_reg_4;
  reg  [22:0] ref_frac_reg_5;
  reg  [22:0] ref_frac_reg_6;
  reg  [22:0] ref_frac_reg_7;
  reg  [7:0]  ref_exp_reg_0;
  reg  [7:0]  ref_exp_reg_1;
  reg  [7:0]  ref_exp_reg_2;
  reg  [7:0]  ref_exp_reg_3;
  reg  [7:0]  ref_exp_reg_4;
  reg  [7:0]  ref_exp_reg_5;
  reg  [7:0]  ref_exp_reg_6;
  reg  [7:0]  ref_exp_reg_7;
  reg  [7:0]  sub_exp_reg_0;
  reg  [7:0]  sub_exp_reg_1;
  reg  [7:0]  sub_exp_reg_2;
  reg  [7:0]  sub_exp_reg_3;
  reg  [7:0]  sub_exp_reg_4;
  reg  [7:0]  sub_exp_reg_5;
  reg  [7:0]  sub_exp_reg_6;
  reg  [7:0]  sub_exp_reg_7;
  reg  [23:0] wfrac_adder_io_out_s_reg_0;
  reg  [23:0] wfrac_adder_io_out_s_reg_1;
  reg  [23:0] wfrac_adder_io_out_s_reg_2;
  reg         wfrac_adder_io_out_c_reg_0;
  reg         new_sign_reg_0;
  reg         new_sign_reg_1;
  reg         new_sign_reg_2;
  reg         new_sign_reg_3;
  reg         new_sign_reg_4;
  reg         new_sign_reg_5;
  reg  [22:0] new_frac_reg_0;
  reg  [7:0]  new_exp_reg_0;
  reg         NoChange_reg_0;
  reg         NoChange_reg_1;
  reg         NoChange_reg_2;
  reg         NoChange_reg_3;
  reg         NoChange_reg_4;
  reg         ShiftDir_reg_0;
  reg         ShiftDir_reg_1;
  reg         ShiftDir_reg_2;
  reg         ShiftDir_reg_3;
  reg         ShiftDir_reg_4;
  reg  [23:0] wfrac_adder_result_reg_0;
  reg  [23:0] wfrac_adder_result_reg_1;
  reg  [23:0] wfrac_adder_result_reg_2;
  reg  [5:0]  leadingOneDet_reg_0;
  reg  [5:0]  leadingOneDet_reg_1;
  reg  [31:0] in_data_0_reg_0;
  reg  [31:0] in_data_0_reg_1;
  reg  [31:0] in_data_0_reg_2;
  reg  [31:0] in_data_0_reg_3;
  reg  [31:0] in_data_0_reg_4;
  reg  [31:0] in_data_0_reg_5;
  reg  [31:0] in_data_0_reg_6;
  reg  [31:0] in_data_0_reg_7;
  reg  [31:0] in_data_0_reg_8;
  reg  [31:0] in_data_0_reg_9;
  reg  [31:0] in_data_0_reg_10;
  reg  [31:0] in_data_1_reg_0;
  reg  [31:0] in_data_1_reg_1;
  reg  [31:0] in_data_1_reg_2;
  reg  [31:0] in_data_1_reg_3;
  reg  [31:0] in_data_1_reg_4;
  reg  [31:0] in_data_1_reg_5;
  reg  [31:0] in_data_1_reg_6;
  reg  [31:0] in_data_1_reg_7;
  reg  [31:0] in_data_1_reg_8;
  reg  [31:0] in_data_1_reg_9;
  reg  [31:0] in_data_1_reg_10;
  reg  [7:0]  exp_subber2_out_s_reg_0;
  reg         exp_subber2_out_c_reg_0;
  reg  [7:0]  cmpl_exp_subber_out_s_reg_0;
  reg  [23:0] cmpl_temp_wfrac_add_in_reg_0_0;
  reg  [23:0] cmpl_temp_wfrac_add_in_reg_0_1;
  wire [1:0]  _wfrac_adder_io_in_b_T = {sign_reg_4_1, sign_reg_4_0};
  reg  [23:0] cmpl_wfrac_adder_io_out_s_reg_0;
  reg  [31:0] reg_out_s;
  always @(posedge clock) begin
    out_ready_reg_r <= in_valid;
    out_ready_reg_r_1 <= out_ready_reg_r;
    out_ready_reg_r_2 <= out_ready_reg_r_1;
    out_ready_reg_r_3 <= out_ready_reg_r_2;
    out_ready_reg_r_4 <= out_ready_reg_r_3;
    out_ready_reg_r_5 <= out_ready_reg_r_4;
    out_ready_reg_r_6 <= out_ready_reg_r_5;
    out_ready_reg_r_7 <= out_ready_reg_r_6;
    out_ready_reg_r_8 <= out_ready_reg_r_7;
    out_ready_reg_r_9 <= out_ready_reg_r_8;
    out_ready_reg_r_10 <= out_ready_reg_r_9;
    out_ready_reg_r_11 <= out_ready_reg_r_10;
    out_ready_reg <= out_ready_reg_r_11;
    if (reset) begin
      sign_reg_0_0 <= 1'h0;
      sign_reg_0_1 <= 1'h0;
      sign_reg_1_0 <= 1'h0;
      sign_reg_1_1 <= 1'h0;
      sign_reg_2_0 <= 1'h0;
      sign_reg_2_1 <= 1'h0;
      sign_reg_3_0 <= 1'h0;
      sign_reg_3_1 <= 1'h0;
      sign_reg_4_0 <= 1'h0;
      sign_reg_4_1 <= 1'h0;
      sign_reg_5_0 <= 1'h0;
      sign_reg_5_1 <= 1'h0;
      sign_reg_6_0 <= 1'h0;
      sign_reg_6_1 <= 1'h0;
      sign_reg_7_0 <= 1'h0;
      sign_reg_7_1 <= 1'h0;
      sign_reg_8_0 <= 1'h0;
      sign_reg_8_1 <= 1'h0;
      sign_reg_9_0 <= 1'h0;
      sign_reg_9_1 <= 1'h0;
      sign_reg_10_0 <= 1'h0;
      sign_reg_10_1 <= 1'h0;
      exp_reg_0_0 <= 8'h0;
      exp_reg_0_1 <= 8'h0;
      exp_reg_1_0 <= 8'h0;
      exp_reg_1_1 <= 8'h0;
      exp_reg_2_0 <= 8'h0;
      exp_reg_2_1 <= 8'h0;
      frac_reg_0_0 <= 23'h0;
      frac_reg_0_1 <= 23'h0;
      frac_reg_1_0 <= 23'h0;
      frac_reg_1_1 <= 23'h0;
      frac_reg_2_0 <= 23'h0;
      frac_reg_2_1 <= 23'h0;
      wfrac_reg_0_0 <= 24'h0;
      wfrac_reg_0_1 <= 24'h0;
      wfrac_reg_1_0 <= 24'h0;
      wfrac_reg_1_1 <= 24'h0;
      wfrac_reg_2_0 <= 24'h0;
      wfrac_reg_2_1 <= 24'h0;
      exp_subber_out_s_reg_0 <= 8'h0;
      exp_subber_out_s_reg_1 <= 8'h0;
      exp_subber_out_c_reg_0 <= 1'h0;
      exp_subber_out_c_reg_1 <= 1'h0;
      temp_wfrac_add_in_reg_0_0 <= 24'h0;
      temp_wfrac_add_in_reg_0_1 <= 24'h0;
      temp_wfrac_add_in_reg_1_0 <= 24'h0;
      temp_wfrac_add_in_reg_1_1 <= 24'h0;
      ref_sign_reg_0 <= 1'h0;
      ref_sign_reg_1 <= 1'h0;
      ref_sign_reg_2 <= 1'h0;
      ref_sign_reg_3 <= 1'h0;
      ref_sign_reg_4 <= 1'h0;
      ref_sign_reg_5 <= 1'h0;
      ref_sign_reg_6 <= 1'h0;
      ref_sign_reg_7 <= 1'h0;
      ref_frac_reg_0 <= 23'h0;
      ref_frac_reg_1 <= 23'h0;
      ref_frac_reg_2 <= 23'h0;
      ref_frac_reg_3 <= 23'h0;
      ref_frac_reg_4 <= 23'h0;
      ref_frac_reg_5 <= 23'h0;
      ref_frac_reg_6 <= 23'h0;
      ref_frac_reg_7 <= 23'h0;
      ref_exp_reg_0 <= 8'h0;
      ref_exp_reg_1 <= 8'h0;
      ref_exp_reg_2 <= 8'h0;
      ref_exp_reg_3 <= 8'h0;
      ref_exp_reg_4 <= 8'h0;
      ref_exp_reg_5 <= 8'h0;
      ref_exp_reg_6 <= 8'h0;
      ref_exp_reg_7 <= 8'h0;
      sub_exp_reg_0 <= 8'h0;
      sub_exp_reg_1 <= 8'h0;
      sub_exp_reg_2 <= 8'h0;
      sub_exp_reg_3 <= 8'h0;
      sub_exp_reg_4 <= 8'h0;
      sub_exp_reg_5 <= 8'h0;
      sub_exp_reg_6 <= 8'h0;
      sub_exp_reg_7 <= 8'h0;
      wfrac_adder_io_out_s_reg_0 <= 24'h0;
      wfrac_adder_io_out_s_reg_1 <= 24'h0;
      wfrac_adder_io_out_s_reg_2 <= 24'h0;
      wfrac_adder_io_out_c_reg_0 <= 1'h0;
      new_sign_reg_0 <= 1'h0;
      new_sign_reg_1 <= 1'h0;
      new_sign_reg_2 <= 1'h0;
      new_sign_reg_3 <= 1'h0;
      new_sign_reg_4 <= 1'h0;
      new_sign_reg_5 <= 1'h0;
      new_frac_reg_0 <= 23'h0;
      new_exp_reg_0 <= 8'h0;
      NoChange_reg_0 <= 1'h0;
      NoChange_reg_1 <= 1'h0;
      NoChange_reg_2 <= 1'h0;
      NoChange_reg_3 <= 1'h0;
      NoChange_reg_4 <= 1'h0;
      ShiftDir_reg_0 <= 1'h0;
      ShiftDir_reg_1 <= 1'h0;
      ShiftDir_reg_2 <= 1'h0;
      ShiftDir_reg_3 <= 1'h0;
      ShiftDir_reg_4 <= 1'h0;
      wfrac_adder_result_reg_0 <= 24'h0;
      wfrac_adder_result_reg_1 <= 24'h0;
      wfrac_adder_result_reg_2 <= 24'h0;
      leadingOneDet_reg_0 <= 6'h0;
      leadingOneDet_reg_1 <= 6'h0;
      in_data_0_reg_0 <= 32'h0;
      in_data_0_reg_1 <= 32'h0;
      in_data_0_reg_2 <= 32'h0;
      in_data_0_reg_3 <= 32'h0;
      in_data_0_reg_4 <= 32'h0;
      in_data_0_reg_5 <= 32'h0;
      in_data_0_reg_6 <= 32'h0;
      in_data_0_reg_7 <= 32'h0;
      in_data_0_reg_8 <= 32'h0;
      in_data_0_reg_9 <= 32'h0;
      in_data_0_reg_10 <= 32'h0;
      in_data_1_reg_0 <= 32'h0;
      in_data_1_reg_1 <= 32'h0;
      in_data_1_reg_2 <= 32'h0;
      in_data_1_reg_3 <= 32'h0;
      in_data_1_reg_4 <= 32'h0;
      in_data_1_reg_5 <= 32'h0;
      in_data_1_reg_6 <= 32'h0;
      in_data_1_reg_7 <= 32'h0;
      in_data_1_reg_8 <= 32'h0;
      in_data_1_reg_9 <= 32'h0;
      in_data_1_reg_10 <= 32'h0;
      exp_subber2_out_s_reg_0 <= 8'h0;
      exp_subber2_out_c_reg_0 <= 1'h0;
      cmpl_exp_subber_out_s_reg_0 <= 8'h0;
      cmpl_temp_wfrac_add_in_reg_0_0 <= 24'h0;
      cmpl_temp_wfrac_add_in_reg_0_1 <= 24'h0;
      cmpl_wfrac_adder_io_out_s_reg_0 <= 24'h0;
      reg_out_s <= 32'h0;
    end
    else begin
      automatic logic _NoChange_T_11 = sign_reg_5_0 ^ sign_reg_5_1;
      automatic logic _GEN =
        in_data_0_reg_10[30:0] == 31'h0 & in_data_1_reg_10[30:0] == 31'h0;
      automatic logic _GEN_0;
      _GEN_0 = sub_exp_reg_7 > 8'h16;
      sign_reg_0_0 <= in_data_0[31];
      sign_reg_0_1 <= in_data_1[31];
      sign_reg_1_0 <= sign_reg_0_0;
      sign_reg_1_1 <= sign_reg_0_1;
      sign_reg_2_0 <= sign_reg_1_0;
      sign_reg_2_1 <= sign_reg_1_1;
      sign_reg_3_0 <= sign_reg_2_0;
      sign_reg_3_1 <= sign_reg_2_1;
      sign_reg_4_0 <= sign_reg_3_0;
      sign_reg_4_1 <= sign_reg_3_1;
      sign_reg_5_0 <= sign_reg_4_0;
      sign_reg_5_1 <= sign_reg_4_1;
      sign_reg_6_0 <= sign_reg_5_0;
      sign_reg_6_1 <= sign_reg_5_1;
      sign_reg_7_0 <= sign_reg_6_0;
      sign_reg_7_1 <= sign_reg_6_1;
      sign_reg_8_0 <= sign_reg_7_0;
      sign_reg_8_1 <= sign_reg_7_1;
      sign_reg_9_0 <= sign_reg_8_0;
      sign_reg_9_1 <= sign_reg_8_1;
      sign_reg_10_0 <= sign_reg_9_0;
      sign_reg_10_1 <= sign_reg_9_1;
      if ({1'h0, in_data_0[30:23]} > 9'hFE)
        exp_reg_0_0 <= 8'hFE;
      else if (in_data_0[30:23] == 8'h0)
        exp_reg_0_0 <= 8'h1;
      else
        exp_reg_0_0 <= in_data_0[30:23];
      if ({1'h0, in_data_1[30:23]} > 9'hFE)
        exp_reg_0_1 <= 8'hFE;
      else if (in_data_1[30:23] == 8'h0)
        exp_reg_0_1 <= 8'h1;
      else
        exp_reg_0_1 <= in_data_1[30:23];
      exp_reg_1_0 <= exp_reg_0_0;
      exp_reg_1_1 <= exp_reg_0_1;
      exp_reg_2_0 <= exp_reg_1_0;
      exp_reg_2_1 <= exp_reg_1_1;
      frac_reg_0_0 <= in_data_0[22:0];
      frac_reg_0_1 <= in_data_1[22:0];
      frac_reg_1_0 <= frac_reg_0_0;
      frac_reg_1_1 <= frac_reg_0_1;
      frac_reg_2_0 <= frac_reg_1_0;
      frac_reg_2_1 <= frac_reg_1_1;
      wfrac_reg_0_0 <= {1'h1, in_data_0[22:0]};
      wfrac_reg_0_1 <= {1'h1, in_data_1[22:0]};
      wfrac_reg_1_0 <= wfrac_reg_0_0;
      wfrac_reg_1_1 <= wfrac_reg_0_1;
      wfrac_reg_2_0 <= wfrac_reg_1_0;
      wfrac_reg_2_1 <= wfrac_reg_1_1;
      exp_subber_out_s_reg_0 <= _exp_subber_io_out_s;
      exp_subber_out_s_reg_1 <= exp_subber_out_s_reg_0;
      exp_subber_out_c_reg_0 <= _exp_subber_io_out_c;
      exp_subber_out_c_reg_1 <= exp_subber_out_c_reg_0;
      if (exp_subber_out_c_reg_1) begin
        temp_wfrac_add_in_reg_0_0 <= wfrac_reg_2_0 >> cmpl_exp_subber_out_s_reg_0;
        temp_wfrac_add_in_reg_0_1 <= wfrac_reg_2_1;
        ref_sign_reg_0 <= sign_reg_2_1;
        ref_frac_reg_0 <= frac_reg_2_1;
        ref_exp_reg_0 <= exp_reg_2_1;
        sub_exp_reg_0 <= cmpl_exp_subber_out_s_reg_0;
      end
      else begin
        temp_wfrac_add_in_reg_0_0 <= wfrac_reg_2_0;
        temp_wfrac_add_in_reg_0_1 <= wfrac_reg_2_1 >> exp_subber_out_s_reg_1;
        ref_sign_reg_0 <= sign_reg_2_0;
        ref_frac_reg_0 <= frac_reg_2_0;
        ref_exp_reg_0 <= exp_reg_2_0;
        sub_exp_reg_0 <= exp_subber_out_s_reg_1;
      end
      temp_wfrac_add_in_reg_1_0 <= temp_wfrac_add_in_reg_0_0;
      temp_wfrac_add_in_reg_1_1 <= temp_wfrac_add_in_reg_0_1;
      ref_sign_reg_1 <= ref_sign_reg_0;
      ref_sign_reg_2 <= ref_sign_reg_1;
      ref_sign_reg_3 <= ref_sign_reg_2;
      ref_sign_reg_4 <= ref_sign_reg_3;
      ref_sign_reg_5 <= ref_sign_reg_4;
      ref_sign_reg_6 <= ref_sign_reg_5;
      ref_sign_reg_7 <= ref_sign_reg_6;
      ref_frac_reg_1 <= ref_frac_reg_0;
      ref_frac_reg_2 <= ref_frac_reg_1;
      ref_frac_reg_3 <= ref_frac_reg_2;
      ref_frac_reg_4 <= ref_frac_reg_3;
      ref_frac_reg_5 <= ref_frac_reg_4;
      ref_frac_reg_6 <= ref_frac_reg_5;
      ref_frac_reg_7 <= ref_frac_reg_6;
      ref_exp_reg_1 <= ref_exp_reg_0;
      ref_exp_reg_2 <= ref_exp_reg_1;
      ref_exp_reg_3 <= ref_exp_reg_2;
      ref_exp_reg_4 <= ref_exp_reg_3;
      ref_exp_reg_5 <= ref_exp_reg_4;
      ref_exp_reg_6 <= ref_exp_reg_5;
      ref_exp_reg_7 <= ref_exp_reg_6;
      sub_exp_reg_1 <= sub_exp_reg_0;
      sub_exp_reg_2 <= sub_exp_reg_1;
      sub_exp_reg_3 <= sub_exp_reg_2;
      sub_exp_reg_4 <= sub_exp_reg_3;
      sub_exp_reg_5 <= sub_exp_reg_4;
      sub_exp_reg_6 <= sub_exp_reg_5;
      sub_exp_reg_7 <= sub_exp_reg_6;
      wfrac_adder_io_out_s_reg_0 <= _wfrac_adder_io_out_s;
      wfrac_adder_io_out_s_reg_1 <= wfrac_adder_io_out_s_reg_0;
      wfrac_adder_io_out_s_reg_2 <= wfrac_adder_io_out_s_reg_1;
      wfrac_adder_io_out_c_reg_0 <= _wfrac_adder_io_out_c;
      new_sign_reg_0 <=
        ~wfrac_adder_io_out_c_reg_0 & (sign_reg_5_0 | sign_reg_5_1) | sign_reg_5_0
        & sign_reg_5_1;
      new_sign_reg_1 <= new_sign_reg_0;
      new_sign_reg_2 <= new_sign_reg_1;
      new_sign_reg_3 <= new_sign_reg_2;
      new_sign_reg_4 <= new_sign_reg_3;
      new_sign_reg_5 <= ~_GEN & (_GEN_0 ? ref_sign_reg_7 : new_sign_reg_4);
      if (_GEN) begin
        new_frac_reg_0 <= 23'h0;
        new_exp_reg_0 <= 8'h0;
      end
      else begin
        automatic logic _GEN_1;
        automatic logic _GEN_2;
        _GEN_1 = ref_exp_reg_7 == 8'hFE;
        _GEN_2 =
          leadingOneDet_reg_1 == 6'h1 & wfrac_adder_result_reg_2 == 24'h0
          & (sign_reg_10_0 ^ sign_reg_10_1)
          & in_data_0_reg_10[30:0] == in_data_1_reg_10[30:0];
        if (_GEN_0)
          new_frac_reg_0 <= ref_frac_reg_7;
        else if (NoChange_reg_4)
          new_frac_reg_0 <= wfrac_adder_result_reg_2[22:0];
        else if (ShiftDir_reg_4) begin
          if (_GEN_2 | exp_subber2_out_c_reg_0)
            new_frac_reg_0 <= 23'h0;
          else begin
            automatic logic [85:0] _new_frac_reg_0_T_7 =
              {63'h0, wfrac_adder_result_reg_2[22:0]} << 6'h18 - leadingOneDet_reg_1;
            new_frac_reg_0 <= _new_frac_reg_0_T_7[22:0];
          end
        end
        else if (_GEN_1)
          new_frac_reg_0 <= 23'h7FFFFF;
        else
          new_frac_reg_0 <= wfrac_adder_result_reg_2[23:1];
        if (_GEN_0 | NoChange_reg_4)
          new_exp_reg_0 <= ref_exp_reg_7;
        else if (ShiftDir_reg_4) begin
          if (_GEN_2)
            new_exp_reg_0 <= 8'h0;
          else if (exp_subber2_out_c_reg_0)
            new_exp_reg_0 <= 8'h1;
          else
            new_exp_reg_0 <= exp_subber2_out_s_reg_0;
        end
        else if (_GEN_1)
          new_exp_reg_0 <= 8'hFE;
        else
          new_exp_reg_0 <= ref_exp_reg_7 + 8'h1;
      end
      NoChange_reg_0 <=
        ~wfrac_adder_io_out_c_reg_0 & ~(wfrac_adder_io_out_s_reg_0[23])
        | ~wfrac_adder_io_out_c_reg_0 & ~_NoChange_T_11 | wfrac_adder_io_out_c_reg_0
        & wfrac_adder_io_out_s_reg_0[23] & _NoChange_T_11;
      NoChange_reg_1 <= NoChange_reg_0;
      NoChange_reg_2 <= NoChange_reg_1;
      NoChange_reg_3 <= NoChange_reg_2;
      NoChange_reg_4 <= NoChange_reg_3;
      ShiftDir_reg_0 <= ~wfrac_adder_io_out_c_reg_0 | _NoChange_T_11;
      ShiftDir_reg_1 <= ShiftDir_reg_0;
      ShiftDir_reg_2 <= ShiftDir_reg_1;
      ShiftDir_reg_3 <= ShiftDir_reg_2;
      ShiftDir_reg_4 <= ShiftDir_reg_3;
      if (new_sign_reg_1 & ^{sign_reg_7_1, sign_reg_7_0})
        wfrac_adder_result_reg_0 <= cmpl_wfrac_adder_io_out_s_reg_0;
      else
        wfrac_adder_result_reg_0 <= wfrac_adder_io_out_s_reg_2;
      wfrac_adder_result_reg_1 <= wfrac_adder_result_reg_0;
      wfrac_adder_result_reg_2 <= wfrac_adder_result_reg_1;
      leadingOneDet_reg_0 <=
        {1'h0,
         wfrac_adder_result_reg_0[23]
           ? 5'h17
           : wfrac_adder_result_reg_0[22]
               ? 5'h16
               : wfrac_adder_result_reg_0[21]
                   ? 5'h15
                   : wfrac_adder_result_reg_0[20]
                       ? 5'h14
                       : wfrac_adder_result_reg_0[19]
                           ? 5'h13
                           : wfrac_adder_result_reg_0[18]
                               ? 5'h12
                               : wfrac_adder_result_reg_0[17]
                                   ? 5'h11
                                   : wfrac_adder_result_reg_0[16]
                                       ? 5'h10
                                       : {1'h0,
                                          wfrac_adder_result_reg_0[15]
                                            ? 4'hF
                                            : wfrac_adder_result_reg_0[14]
                                                ? 4'hE
                                                : wfrac_adder_result_reg_0[13]
                                                    ? 4'hD
                                                    : wfrac_adder_result_reg_0[12]
                                                        ? 4'hC
                                                        : wfrac_adder_result_reg_0[11]
                                                            ? 4'hB
                                                            : wfrac_adder_result_reg_0[10]
                                                                ? 4'hA
                                                                : wfrac_adder_result_reg_0[9]
                                                                    ? 4'h9
                                                                    : wfrac_adder_result_reg_0[8]
                                                                        ? 4'h8
                                                                        : {1'h0,
                                                                           wfrac_adder_result_reg_0[7]
                                                                             ? 3'h7
                                                                             : wfrac_adder_result_reg_0[6]
                                                                                 ? 3'h6
                                                                                 : wfrac_adder_result_reg_0[5]
                                                                                     ? 3'h5
                                                                                     : wfrac_adder_result_reg_0[4]
                                                                                         ? 3'h4
                                                                                         : {1'h0,
                                                                                            wfrac_adder_result_reg_0[3]
                                                                                              ? 2'h3
                                                                                              : wfrac_adder_result_reg_0[2]
                                                                                                  ? 2'h2
                                                                                                  : {1'h0,
                                                                                                     wfrac_adder_result_reg_0[1]}}}}}
        + 6'h1;
      leadingOneDet_reg_1 <= leadingOneDet_reg_0;
      in_data_0_reg_0 <= in_data_0;
      in_data_0_reg_1 <= in_data_0_reg_0;
      in_data_0_reg_2 <= in_data_0_reg_1;
      in_data_0_reg_3 <= in_data_0_reg_2;
      in_data_0_reg_4 <= in_data_0_reg_3;
      in_data_0_reg_5 <= in_data_0_reg_4;
      in_data_0_reg_6 <= in_data_0_reg_5;
      in_data_0_reg_7 <= in_data_0_reg_6;
      in_data_0_reg_8 <= in_data_0_reg_7;
      in_data_0_reg_9 <= in_data_0_reg_8;
      in_data_0_reg_10 <= in_data_0_reg_9;
      in_data_1_reg_0 <= in_data_1;
      in_data_1_reg_1 <= in_data_1_reg_0;
      in_data_1_reg_2 <= in_data_1_reg_1;
      in_data_1_reg_3 <= in_data_1_reg_2;
      in_data_1_reg_4 <= in_data_1_reg_3;
      in_data_1_reg_5 <= in_data_1_reg_4;
      in_data_1_reg_6 <= in_data_1_reg_5;
      in_data_1_reg_7 <= in_data_1_reg_6;
      in_data_1_reg_8 <= in_data_1_reg_7;
      in_data_1_reg_9 <= in_data_1_reg_8;
      in_data_1_reg_10 <= in_data_1_reg_9;
      exp_subber2_out_s_reg_0 <= _exp_subber2_io_out_s;
      exp_subber2_out_c_reg_0 <= _exp_subber2_io_out_c;
      cmpl_exp_subber_out_s_reg_0 <= ~exp_subber_out_s_reg_0 + 8'h1;
      cmpl_temp_wfrac_add_in_reg_0_0 <= ~temp_wfrac_add_in_reg_0_0 + 24'h1;
      cmpl_temp_wfrac_add_in_reg_0_1 <= ~temp_wfrac_add_in_reg_0_1 + 24'h1;
      cmpl_wfrac_adder_io_out_s_reg_0 <= ~wfrac_adder_io_out_s_reg_1 + 24'h1;
      reg_out_s <= {new_sign_reg_5, new_exp_reg_0, new_frac_reg_0};
    end
  end // always @(posedge)
  full_subtractor_bw8 exp_subber (
    .io_in_a  (exp_reg_0_0),
    .io_in_b  (exp_reg_0_1),
    .io_out_s (_exp_subber_io_out_s),
    .io_out_c (_exp_subber_io_out_c)
  );
  full_adder_bw24 wfrac_adder (
    .io_in_a
      (_wfrac_adder_io_in_b_T == 2'h1
         ? cmpl_temp_wfrac_add_in_reg_0_0
         : temp_wfrac_add_in_reg_1_0),
    .io_in_b
      (_wfrac_adder_io_in_b_T == 2'h2
         ? cmpl_temp_wfrac_add_in_reg_0_1
         : temp_wfrac_add_in_reg_1_1),
    .io_out_s (_wfrac_adder_io_out_s),
    .io_out_c (_wfrac_adder_io_out_c)
  );
  full_subtractor_bw8 exp_subber2 (
    .io_in_a  (ref_exp_reg_6),
    .io_in_b  ({2'h0, 6'h18 - leadingOneDet_reg_0}),
    .io_out_s (_exp_subber2_io_out_s),
    .io_out_c (_exp_subber2_io_out_c)
  );
  assign out_data = reg_out_s;
  assign out_ready = out_ready_reg;
endmodule

