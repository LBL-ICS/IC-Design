// Generated by CIRCT firtool-1.56.1
module full_subtractor_bw8(
  input  [7:0] io_in_a,
               io_in_b,
  output [7:0] io_out_s,
  output       io_out_c
);
module sfsfsf sdfsfddsfdsfdsljfksfdslkfd
  wire [8:0] result = {1'h0, io_in_a} - {1'h0, io_in_b};
  assign io_out_s = result[7:0];
  assign io_out_c = result[8];
endmodule

module full_adder_bw24(
  input  [23:0] io_in_a,
                io_in_b,
  output [23:0] io_out_s,
  output        io_out_c
);

  wire [24:0] result = {1'h0, io_in_a} + {1'h0, io_in_b};
  assign io_out_s = result[23:0];
  assign io_out_c = result[24];
endmodule

module FP_adder_32_1cc(
  input         clock,
                reset,
                in_valid,
  input  [31:0] in_data_0,
                in_data_1,
  output [31:0] out_data,
  output        out_ready
);

  wire [7:0]  _exp_subber2_io_out_s;
  wire        _exp_subber2_io_out_c;
  wire [23:0] _wfrac_adder_io_out_s;
  wire        _wfrac_adder_io_out_c;
  wire [7:0]  _exp_subber_io_out_s;
  wire        _exp_subber_io_out_c;
  wire        _GEN = {1'h0, in_data_0[30:23]} > 9'hFE;
  wire        _GEN_0 = in_data_0[30:23] == 8'h0;
  wire [7:0]  exp_0 = _GEN ? 8'hFE : _GEN_0 ? 8'h1 : in_data_0[30:23];
  wire        _GEN_1 = {1'h0, in_data_1[30:23]} > 9'hFE;
  wire        _GEN_2 = in_data_1[30:23] == 8'h0;
  wire [7:0]  exp_1 = _GEN_1 ? 8'hFE : _GEN_2 ? 8'h1 : in_data_1[30:23];
  wire [23:0] wfrac_0 = {1'h1, in_data_0[22:0]};
  wire [23:0] wfrac_1 = {1'h1, in_data_1[22:0]};
  reg         out_ready_reg;
  reg         new_sign_reg_0;
  reg  [22:0] new_frac_reg_0;
  reg  [7:0]  new_exp_reg_0;
  wire [7:0]  _cmpl_exp_subber_out_s_wire_T_1 = ~_exp_subber_io_out_s + 8'h1;
  wire [7:0]  ref_exp = _exp_subber_io_out_c ? exp_1 : exp_0;
  wire [23:0] wire_temp_wfrac_add_in_0 =
    _exp_subber_io_out_c ? wfrac_0 >> _cmpl_exp_subber_out_s_wire_T_1 : wfrac_0;
  wire [23:0] wire_temp_wfrac_add_in_1 =
    _exp_subber_io_out_c ? wfrac_1 : wfrac_1 >> _exp_subber_io_out_s;
  wire [1:0]  _wfrac_adder_result_T = {in_data_1[31], in_data_0[31]};
  wire        new_sign =
    ~_wfrac_adder_io_out_c & (in_data_0[31] | in_data_1[31]) | in_data_0[31]
    & in_data_1[31];
  wire [23:0] wfrac_adder_result =
    new_sign & ^_wfrac_adder_result_T
      ? ~_wfrac_adder_io_out_s + 24'h1
      : _wfrac_adder_io_out_s;
  wire [5:0]  leadingOneDet =
    {1'h0,
     wfrac_adder_result[23]
       ? 5'h17
       : wfrac_adder_result[22]
           ? 5'h16
           : wfrac_adder_result[21]
               ? 5'h15
               : wfrac_adder_result[20]
                   ? 5'h14
                   : wfrac_adder_result[19]
                       ? 5'h13
                       : wfrac_adder_result[18]
                           ? 5'h12
                           : wfrac_adder_result[17]
                               ? 5'h11
                               : wfrac_adder_result[16]
                                   ? 5'h10
                                   : {1'h0,
                                      wfrac_adder_result[15]
                                        ? 4'hF
                                        : wfrac_adder_result[14]
                                            ? 4'hE
                                            : wfrac_adder_result[13]
                                                ? 4'hD
                                                : wfrac_adder_result[12]
                                                    ? 4'hC
                                                    : wfrac_adder_result[11]
                                                        ? 4'hB
                                                        : wfrac_adder_result[10]
                                                            ? 4'hA
                                                            : wfrac_adder_result[9]
                                                                ? 4'h9
                                                                : wfrac_adder_result[8]
                                                                    ? 4'h8
                                                                    : {1'h0,
                                                                       wfrac_adder_result[7]
                                                                         ? 3'h7
                                                                         : wfrac_adder_result[6]
                                                                             ? 3'h6
                                                                             : wfrac_adder_result[5]
                                                                                 ? 3'h5
                                                                                 : wfrac_adder_result[4]
                                                                                     ? 3'h4
                                                                                     : {1'h0,
                                                                                        wfrac_adder_result[3]
                                                                                          ? 2'h3
                                                                                          : wfrac_adder_result[2]
                                                                                              ? 2'h2
                                                                                              : {1'h0,
                                                                                                 wfrac_adder_result[1]}}}}}
    + 6'h1;
  wire [5:0]  _new_frac_reg_0_T_5 = 6'h18 - leadingOneDet;
  always @(posedge clock) begin
    out_ready_reg <= in_valid;
    if (reset) begin
      new_sign_reg_0 <= 1'h0;
      new_frac_reg_0 <= 23'h0;
      new_exp_reg_0 <= 8'h0;
    end
    else begin
      automatic logic _GEN_3 = in_data_0[30:0] == 31'h0 & in_data_1[30:0] == 31'h0;
      automatic logic _GEN_4;
      _GEN_4 =
        (_exp_subber_io_out_c
           ? _cmpl_exp_subber_out_s_wire_T_1
           : _exp_subber_io_out_s) > 8'h16;
      new_sign_reg_0 <=
        ~_GEN_3
        & (_GEN_4 ? (_exp_subber_io_out_c ? in_data_1[31] : in_data_0[31]) : new_sign);
      if (_GEN_3) begin
        new_frac_reg_0 <= 23'h0;
        new_exp_reg_0 <= 8'h0;
      end
      else begin
        automatic logic _NoChange_T_11 = in_data_0[31] ^ in_data_1[31];
        automatic logic ShiftDir;
        automatic logic NoChange;
        automatic logic _GEN_5;
        automatic logic _GEN_6;
        ShiftDir = ~_wfrac_adder_io_out_c | _NoChange_T_11;
        NoChange =
          ~_wfrac_adder_io_out_c & ~(_wfrac_adder_io_out_s[23]) | ~_wfrac_adder_io_out_c
          & ~_NoChange_T_11 | _wfrac_adder_io_out_c & _wfrac_adder_io_out_s[23]
          & _NoChange_T_11;
        _GEN_5 = ref_exp == 8'hFE;
        _GEN_6 =
          leadingOneDet == 6'h1 & wfrac_adder_result == 24'h0 & _NoChange_T_11
          & in_data_0[30:0] == in_data_1[30:0];
        if (_GEN_4) begin
          if (_exp_subber_io_out_c)
            new_frac_reg_0 <= in_data_1[22:0];
          else
            new_frac_reg_0 <= in_data_0[22:0];
        end
        else if (NoChange)
          new_frac_reg_0 <= wfrac_adder_result[22:0];
        else if (ShiftDir) begin
          if (_GEN_6 | _exp_subber2_io_out_c)
            new_frac_reg_0 <= 23'h0;
          else begin
            automatic logic [85:0] _new_frac_reg_0_T_7 =
              {63'h0, wfrac_adder_result[22:0]} << _new_frac_reg_0_T_5;
            new_frac_reg_0 <= _new_frac_reg_0_T_7[22:0];
          end
        end
        else if (_GEN_5)
          new_frac_reg_0 <= 23'h7FFFFF;
        else
          new_frac_reg_0 <= wfrac_adder_result[23:1];
        if (_GEN_4 | NoChange) begin
          if (_exp_subber_io_out_c) begin
            if (_GEN_1)
              new_exp_reg_0 <= 8'hFE;
            else if (_GEN_2)
              new_exp_reg_0 <= 8'h1;
            else
              new_exp_reg_0 <= in_data_1[30:23];
          end
          else if (_GEN)
            new_exp_reg_0 <= 8'hFE;
          else if (_GEN_0)
            new_exp_reg_0 <= 8'h1;
          else
            new_exp_reg_0 <= in_data_0[30:23];
        end
        else if (ShiftDir) begin
          if (_GEN_6)
            new_exp_reg_0 <= 8'h0;
          else if (_exp_subber2_io_out_c)
            new_exp_reg_0 <= 8'h1;
          else
            new_exp_reg_0 <= _exp_subber2_io_out_s;
        end
        else if (_GEN_5)
          new_exp_reg_0 <= 8'hFE;
        else
          new_exp_reg_0 <= ref_exp + 8'h1;
      end
    end
  end // always @(posedge)
  full_subtractor_bw8 exp_subber (
    .io_in_a  (exp_0),
    .io_in_b  (exp_1),
    .io_out_s (_exp_subber_io_out_s),
    .io_out_c (_exp_subber_io_out_c)
  );
  full_adder_bw24 wfrac_adder (
    .io_in_a
      (_wfrac_adder_result_T == 2'h1
         ? ~wire_temp_wfrac_add_in_0 + 24'h1
         : wire_temp_wfrac_add_in_0),
    .io_in_b
      (_wfrac_adder_result_T == 2'h2
         ? ~wire_temp_wfrac_add_in_1 + 24'h1
         : wire_temp_wfrac_add_in_1),
    .io_out_s (_wfrac_adder_io_out_s),
    .io_out_c (_wfrac_adder_io_out_c)
  );
  full_subtractor_bw8 exp_subber2 (
    .io_in_a  (ref_exp),
    .io_in_b  ({2'h0, _new_frac_reg_0_T_5}),
    .io_out_s (_exp_subber2_io_out_s),
    .io_out_c (_exp_subber2_io_out_c)
  );
  assign out_data = {new_sign_reg_0, new_exp_reg_0, new_frac_reg_0};
  assign out_ready = out_ready_reg;
endmodule

